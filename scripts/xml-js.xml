<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:html="http://www.w3.org/1999/xhtml">

<binding id="mycode">
  <implementation>
    <constructor>
      
	  
	   <![CDATA[		
		
		var version = '1.0.1';


		var topicHeader = document.querySelector(".header-outer div:nth-of-type(3) tr:nth-of-type(2)"); // Select 2nd Table Row In Topic Heading
		var topicAfter = document.querySelector(".header-outer"); // Handle for placing smilies after
		var topicLabel = document.querySelector(".header-outer div:nth-of-type(3) tr:nth-of-type(2) td.label"); // Select topic label button

		var chatname = document.getElementById("splash");
		var lastmodified = document.createElement("p");
		lastmodified.className = "lastmodified";
		lastmodified.innerHTML = "JS Version: " + version;
		chatname.appendChild(lastmodified);

		// Replace Text With Smilies - Use Your Own Smilies Here

		var find = [
			/:crazy:/, 	
			/:roll:/,	
			/:illcontent:/	
		];
		var replaceWith = [
			"<img src=\"http://www.lighthead.net/mf/icons/smilies/crazy.gif\">", 	
			"<img src=\"http://www.lighthead.net/mf/icons/flashemotes/16x16/smi_roll.gif\">", 	
			"<img src=\"http://www.lighthead.net/mf/icons/flashemotes/16x16/smi_ill_content.gif\">"	
		];

		// Remove onclick even for TR

		topicHeader.removeAttribute("onclick");
		topicLabel.onclick = function(event){
			onTopicNodesClick(event);		
		}	

		// Create Menu Buttons

		var menuTD = document.createElement("td");
		menuTD.className = "menuIcons";

		var menuUL = document.createElement("ul");
		menuUL.className = "menu";
		menuTD.appendChild(menuUL);

		// Smilies

		var smilies	= document.createElement("li");	
		smilies.innerHTML = "<span id=\"smileyToggle\" class=\"smilies\" data-numSmilies=\"" + find.length + "\"></span>";
		menuUL.appendChild(smilies);

		
		// Build Smiley Drown Down HTML
			
		var smileyHTML = "<dl>";
		for (var m=0; m<find.length; m++){
			var str = String(find[m]);		
			var findVal = str.replace(/\//g,""); // replace all instances of /
			smileyHTML += "<dt>" + findVal + "</dt><dd>" + replaceWith[m] + "</dd>";	
		}
		smileyHTML += "</dl>";



		// Hidden Div with Smiley Info

		var smiliesDiv = document.createElement("div");	
		smiliesDiv.id = "smileyBox";
		smiliesDiv.className = "boxHide";
		smiliesDiv.innerHTML = smileyHTML;
		topicAfter.appendChild(smiliesDiv);

		// Append the menu table cell to the topic heading
		topicHeader.appendChild(menuTD);


		// Button Events

		smileyToggle.onclick = function(evt)		
		{
			smiliesDiv.className = ((smiliesDiv.className != 'boxShow') ? 'boxShow' : 'boxHide');
			smileyToggle.className = ((smileyToggle.className != 'smilies active') ? 'smilies active' : 'smilies');
			
		}


		// Replace Message Content

		window.addEventListener("animationstart",function(e){	
	
			var lastMSG = document.querySelector(".msg-table tbody").lastChild;			
			var msgtxt = lastMSG.childNodes[2].childNodes[0].innerHTML;
			var msgtype = lastMSG.getAttribute('msg-type');		
			
			lastMSG.childNodes[2].childNodes[0].innerHTML = msgtxt.replaceArray(find, replaceWith);
			
		},false);


		// Code from stackoverflow

		String.prototype.replaceArray = function(find, replace) {
		  var replaceString = this;
		  var regex; 
		  for (var i = 0; i < find.length; i++) {
			regex = new RegExp(find[i], "g");
			replaceString = replaceString.replace(regex, replace[i]);
		  }
		  return replaceString;
		};

		
		
		
		]]>
	  
    </constructor>
  </implementation>
</binding>

</bindings>